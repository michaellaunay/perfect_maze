import unittest
from pytest import *
from perfect_maze import *
from dataclasses import dataclass

@dataclass
class maze_1:
    width = 1
    length = 1
    randrange = []
    open_walls=()
    pmaze = """┌─┐
└─┘"""

@dataclass
class maze_2:
    width = 2
    length = 2
    randrange = [0, 0, 3, 1, 0, 0, 1, 1, 1, 1, 1, 2, 1, 1, 0, 0, 0, 1, 1, 0, 2, 1, 1, 1, 1, 0, 3, 0, 1, 2, 0, 1, 3, 0, 0, 3, 0, 1, 3, 1, 0, 2, 0, 1, 2, 1, 0, 3, 0, 1, 1, ]
    open_walls=((1, 1, 0), (0, 0, 1), (0, 1, 1))
    pmaze = """┌───┐
├─╴ │
└───┘"""

@dataclass
class maze_3:
    width = 3
    length = 3
    randrange = [0, 2, 1, 2, 2, 2, 1, 2, 2, 1, 0, 1, 1, 1, 3, 1, 0, 1, 0, 0, 2, 1, 1, 3, 0, 2, 0, 1, 0, 3, 2, 2, 1, 2, 1, 1, 2, 0, 3, 2, 0, 3, 0, 0, 3, 2, 0, 0, 1, 2, 0, 1, 1, 0, 1, 0, 1, 2, 1, 1, 1, 1, 2, 0, 2, 3, 0, 1, 3, 2, 2, 1, 1, 2, 1, 0, 2, 1, 0, 1, 0, 0, 0, 1, 2, 2, 0, ]
    open_walls=((0, 2, 1), (1, 0, 1), (1, 1, 3), (0, 0, 2), (0, 2, 0), (1, 0, 3), (1, 2, 1), (2, 2, 0))
    pmaze = """┌─────┐
│ ╶─┬─┤
│ ╶─┘ │
└─────┘"""

@dataclass
class maze_4:
    width = 4
    length = 4
    randrange = [3, 0, 2, 1, 2, 2, 2, 3, 3, 2, 2, 2, 0, 3, 1, 3, 1, 0, 1, 1, 0, 2, 0, 0, 3, 1, 3, 1, 0, 3, 0, 2, 3, 1, 1, 2, 3, 1, 0, 0, 0, 0, 2, 0, 0, 3, 3, 0, 0, 0, 0, 1, 3, 2, 3, 1, 2, 1, 2, 0, 3, 3, 0, 3, 1, 3, 3, 3, 1, 3, 3, 3, 2, 1, 2, 2, 2, 0, 0, 1, 2, 1, 3, 3, 1, 3, 0, 2, 3, 3, 2, 1, 1, 0, 0, 1, 0, 3, 0, 2, 0, 2, ]
    open_walls=((3, 0, 2), (1, 2, 2), (2, 3, 3), (2, 2, 2), (0, 3, 1), (1, 1, 0), (3, 1, 3), (1, 0, 3), (1, 1, 2), (3, 3, 0), (3, 1, 2), (3, 3, 3), (0, 1, 2), (0, 3, 0), (2, 0, 2))
    pmaze = """┌───┬─┬─┐
├─┐ │ ╵ │
│ │ ├─┐ │
│ ╵ ╵ ╵ │
└───────┘"""

@dataclass
class maze_5:
    width = 5
    length = 5
    randrange = [2, 2, 2, 4, 4, 1, 4, 1, 3, 1, 2, 0, 4, 1, 2, 2, 0, 0, 1, 4, 3, 3, 2, 1, 1, 3, 1, 0, 2, 1, 3, 1, 0, 1, 2, 0, 1, 3, 1, 4, 1, 2, 2, 3, 1, 1, 2, 3, 1, 1, 2, 4, 1, 3, 1, 0, 0, 2, 2, 1, 4, 4, 2, 2, 2, 3, 1, 3, 1, 1, 4, 1, 3, 4, 0, 0, 1, 3, 1, 1, 0, 4, 1, 0, 2, 3, 1, 1, 1, 0, 1, 0, 1, 2, 4, 2, 4, 1, 3, 0, 2, 0, 3, 2, 3, 3, 3, 2, 1, 2, 3, 2, 1, 2, 1, 0, 3, 4, 2, 2, 3, 0, 3, 1, 2, 3, 3, 3, 3, 2, 3, 1, 2, 4, 0, 1, 3, 1, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 4, 2, 1, 1, 2, 3, 3, 2, 3, 0, 4, 3, 0, 0, 1, 0, 0, 2, 4, 0, 0, 1, 0, 3, 0, 0, 3, 2, 3, 2, 2, 1, 0, 2, 4, 0, 2, 1, 2, 2, 0, 2, 4, 2, 3, 3, 4, 1, ]
    open_walls=((2, 2, 2), (4, 1, 3), (1, 2, 0), (4, 1, 2), (1, 4, 3), (3, 2, 1), (1, 3, 1), (0, 2, 1), (3, 1, 0), (2, 3, 1), (2, 2, 1), (2, 2, 3), (1, 4, 1), (3, 4, 0), (1, 1, 0), (4, 1, 0), (1, 0, 1), (0, 2, 0), (2, 1, 2), (1, 0, 3), (4, 2, 2), (2, 4, 0), (0, 3, 0), (3, 4, 1))
    pmaze = """┌─────┬─┬─┐
├─┐ ┌─┤ ╵ │
│ ╵ ╵ └─╴ │
│ ┌─╴ ╶─┐ │
├─┴─╴ ╷ └─┤
└─────┴───┘"""

@dataclass
class maze_8:
    width = 8
    length = 8
    randrange = [6, 2, 2, 6, 7, 1, 5, 1, 3, 4, 5, 2, 4, 5, 3, 6, 2, 1, 6, 4, 1, 3, 4, 1, 6, 2, 0, 1, 4, 0, 5, 3, 3, 0, 2, 0, 1, 6, 0, 5, 6, 1, 3, 3, 3, 5, 7, 1, 6, 0, 2, 5, 2, 3, 0, 1, 0, 1, 0, 0, 0, 7, 1, 0, 0, 1, 3, 2, 3, 5, 1, 2, 3, 6, 3, 2, 4, 1, 3, 6, 2, 2, 0, 0, 0, 4, 1, 4, 2, 3, 1, 1, 2, 1, 5, 0, 4, 1, 2, 7, 7, 0, 1, 7, 2, 7, 4, 0, 1, 3, 1, 7, 1, 1, 5, 3, 3, 1, 7, 2, 1, 4, 1, 0, 0, 0, 3, 0, 3, 3, 3, 3, 2, 3, 0, 4, 6, 2, 2, 5, 1, 2, 0, 2, 3, 4, 3, 2, 2, 3, 4, 3, 1, 6, 1, 1, 2, 2, 0, 5, 5, 1, 3, 2, 1, 5, 5, 2, 4, 5, 2, 3, 0, 3, 5, 7, 1, 5, 3, 2, 6, 2, 2, 3, 1, 0, 4, 0, 1, 7, 6, 3, 6, 6, 2, 6, 3, 1, 1, 1, 1, 7, 1, 3, 4, 4, 2, 2, 7, 3, 0, 4, 3, 2, 7, 1, 4, 6, 2, 7, 4, 1, 7, 0, 3, 4, 3, 2, 2, 6, 1, 2, 5, 3, 7, 5, 3, 1, 5, 0, 0, 1, 3, 4, 2, 1, 0, 6, 2, 3, 2, 2, 6, 4, 0, 4, 2, 3, 7, 7, 1, 6, 7, 1, 0, 6, 1, 2, 7, 1, 2, 1, 0, 4, 4, 1, 7, 7, 2, 0, 5, 1, 1, 3, 1, 5, 0, 3, 5, 2, 1, 7, 1, 2, 1, 3, 0, 0, 6, 3, 2, 5, 1, 1, 0, 2, 2, 7, 2, 4, 4, 3, 3, 6, 1, 0, 2, 1, 6, 3, 1, 7, 2, 0, 6, 6, 3, 4, 6, 2, 7, 4, 3, 3, 6, 2, 1, 3, 2, 1, 2, 1, 0, 6, 1, 1, 0, 1, 5, 1, 0, 3, 6, 1, 5, 2, 1, 7, 1, 1, 4, 4, 3, 7, 7, 3, 3, 0, 1, 1, 4, 2, 2, 3, 1, 1, 4, 1, 2, 6, 3, 1, 0, 0, 5, 5, 2, 2, 2, 2, 7, 0, 0, 7, 2, 2, 3, 3, 1, 2, 3, 0, 6, 4, 1, 1, 5, 1, 4, 7, 3, 0, 5, 1, 3, 3, 2, 5, 1, 1, 1, 6, 3, 2, 6, 3, 7, 0, 2, 6, 7, 2, 2, 7, 3, 2, 0, 2, 7, 2, 3, 3, 1, 1, 7, 2, 1, 5, 4, 3, 0, 0, 0, 6, 5, 3, 7, 3, 3, 1, 4, 0, 7, 2, 3, 3, 3, 2, 7, 6, 3, 2, 1, 2, 3, 0, 0, 1, 3, 1, 7, 4, 3, 1, 6, 1, 7, 5, 1, 2, 7, 3, 5, 0, 0, 3, 1, 2, 7, 1, 0, 0, 1, 3, 3, 1, 2, 5, 3, 0, 6, 0, 2, 4, 2, 0, 3, 5, 2, 4, 2, 3, 0, 1, 2, 2, 3, 0, 4, 5, 1, 1, 3, 1, 1, 4, 2, 4, 5, 0, 4, 4, 1, 5, 1, 2, 4, 6, 2, 3, 7, 1, 5, 6, 1, 0, 1, 1, 2, 7, 1, 6, 2, 1, 6, 5, 3, 2, 3, 3, 4, 4, 1, 7, 6, 2, 4, 4, 1, 4, 6, 3, 1, 7, 1, 6, 7, 0, 5, 3, 1, 2, 0, 1, 1, 2, 3, 3, 7, 2, 5, 5, 2, 7, 7, 2, 1, 7, 0, 5, 3, 2, 4, 5, 1, 4, 6, 0, 4, 7, 2, 3, 3, 2, 7, 2, 1, 1, 6, 0, 3, 2, 2, 0, 0, 0, 6, 4, 2, 3, 7, 2, 1, 0, 1, 2, 3, 0, 6, 0, 3, 5, 2, 1, 6, 2, 1, 5, 5, 0, 3, 3, 1, 2, 2, 2, 1, 1, 1, 5, 7, 1, 5, 7, 3, 4, 7, 1, 5, 0, 1, 7, 2, 3, 5, 6, 1, 0, 2, 1, 2, 2, 1, 2, 4, 3, 2, 3, 2, 2, 7, 3, 3, 1, 3, 0, 2, 2, ]
    open_walls=((6, 2, 2), (6, 7, 1), (5, 1, 3), (4, 5, 2), (4, 5, 3), (6, 2, 1), (6, 4, 1), (3, 4, 1), (6, 2, 0), (1, 4, 0), (5, 3, 3), (0, 2, 0), (1, 6, 0), (5, 6, 1), (3, 3, 3), (5, 7, 1), (6, 0, 2), (5, 2, 3), (0, 1, 0), (0, 7, 1), (0, 0, 1), (3, 2, 3), (5, 1, 2), (3, 6, 3), (2, 4, 1), (3, 6, 2), (0, 4, 1), (4, 2, 3), (1, 1, 2), (1, 5, 0), (7, 7, 0), (7, 4, 0), (1, 3, 1), (1, 4, 1), (3, 0, 3), (2, 3, 0), (4, 6, 2), (2, 5, 1), (2, 0, 2), (2, 2, 3), (6, 1, 1), (2, 2, 0), (5, 5, 1), (5, 5, 2), (5, 3, 2), (3, 1, 0), (4, 0, 1), (7, 6, 3), (6, 3, 1), (4, 4, 2), (2, 7, 3), (2, 7, 1), (7, 0, 3), (4, 3, 2), (7, 5, 3), (0, 6, 2), (0, 6, 1), (0, 5, 1), (5, 2, 1), (1, 0, 2), (5, 1, 0), (4, 5, 1), (0, 2, 2))
    pmaze = """┌───┬───┬───┬───┐
│ ╷ │ ╷ ├─╴ │ ╶─┤
│ │ ╵ └─┴─╴ ╵ ╶─┤
│ ├─╴ ╶─┬───┐ ╶─┤
├─┘ ╶───┘ ╷ ├─╴ │
├─╴ ┌───╴ └─┴───┤
├─╴ ├───┐ ╷ ╶───┤
│ ╶─┴─╴ │ ├───╴ │
└───────┴─┴─────┘"""

@dataclass
class maze_3x5:
    width = 3
    length = 5
    randrange = [0, 4, 1, 2, 1, 0, 1, 3, 3, 1, 0, 1, 2, 1, 3, 1, 2, 2, 2, 4, 2, 0, 2, 3, 2, 4, 0, 1, 2, 1, 2, 4, 0, 0, 1, 3, 1, 2, 2, 0, 2, 3, 2, 3, 0, 1, 3, 3, 2, 4, 0, 2, 3, 0, 1, 3, 2, 0, 4, 3, 1, 2, 3, 2, 3, 2, 1, 3, 3, 1, 4, 0, 1, 0, 3, 1, 3, 3, 0, 3, 3, 0, 0, 0, 2, 3, 1, 0, 2, 1, 1, 3, 2, 0, 2, 0, 0, 2, 3, 0, 1, 2, 2, 4, 1, 1, 2, 1, 2, 2, 3, 1, 4, 3, 2, 3, 2, 1, 1, 3, ]
    open_walls=((0, 4, 1), (2, 1, 0), (1, 3, 3), (1, 0, 1), (2, 1, 3), (1, 2, 2), (2, 4, 0), (1, 2, 1), (2, 3, 0), (1, 3, 2), (1, 2, 3), (1, 0, 3), (0, 2, 0), (1, 1, 3))
    pmaze = """┌─────┐
├───╴ │
│ ╶───┤
├─╴ ╷ │
├─╴ │ │
└───┴─┘"""

@dataclass
class maze_6x4:
    width = 6
    length = 4
    randrange = [3, 0, 1, 4, 3, 2, 2, 2, 1, 1, 3, 3, 5, 0, 2, 5, 2, 1, 0, 0, 3, 4, 1, 3, 0, 1, 0, 4, 1, 1, 3, 3, 1, 1, 3, 0, 0, 2, 1, 0, 2, 1, 0, 2, 3, 5, 2, 2, 3, 1, 3, 1, 3, 2, 1, 1, 0, 5, 0, 1, 0, 2, 1, 4, 1, 2, 4, 1, 2, 5, 1, 1, 4, 2, 0, 0, 3, 3, 2, 1, 1, 0, 1, 0, 3, 2, 3, 0, 2, 1, 5, 0, 3, 3, 1, 0, 1, 0, 3, 0, 0, 0, 4, 0, 3, 0, 1, 3, 4, 0, 1, 0, 2, 1, 2, 2, 0, 5, 0, 3, 2, 3, 1, 4, 1, 0, 0, 1, 3, 0, 3, 2, 2, 3, 3, 1, 3, 2, 0, 0, 0, 4, 2, 3, 2, 3, 2, 4, 0, 0, 5, 2, 2, 1, 3, 1, 1, 0, 1, 1, 3, 3, 0, 1, 3, 1, 2, 3, 2, 1, 0, 5, 3, 3, 3, 2, 2, ]
    open_walls=((3, 0, 1), (2, 2, 1), (1, 3, 3), (5, 0, 2), (4, 1, 3), (0, 1, 0), (4, 1, 1), (3, 3, 1), (1, 3, 0), (0, 2, 1), (5, 2, 2), (3, 1, 3), (1, 1, 0), (4, 1, 2), (5, 0, 3), (1, 0, 3), (2, 2, 0), (2, 3, 1), (2, 3, 3), (1, 0, 1), (2, 1, 0), (5, 3, 3), (3, 2, 2))
    pmaze = """┌─────┬─────┐
│ ╷ ╷ └───╴ │
├─┴─┤ ╶─┐ ┌─┤
├─╴ └─╴ └─┘ │
└───────────┘"""

mazes = (maze_1, maze_2, maze_3, maze_4, maze_5, maze_8, maze_3x5, maze_6x4)

class TestMaze(unittest.TestCase):
    def test_build_maze(self):
        """ Build a maze with a provided randrange function.
        And check output is as expected.
        """
        for e_maze in mazes:
            gen = (v for v in e_maze.randrange)
            def monky_randrange(*l, **d):
                return next(gen)
            b_maze = build_maze(e_maze.width, e_maze.length, monky_randrange)
            assert b_maze.open_walls == e_maze.open_walls
            b_p_maze = printable_maze(b_maze)
            assert b_p_maze == e_maze.pmaze




        